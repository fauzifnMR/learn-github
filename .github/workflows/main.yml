name: Run UI Automation Tests

on: 
  workflow_dispatch:
    inputs:
      Module:
        required: true
        type: choice
        description: Module 
        default: "all-module"
        options:
          - all-module
          - patient
          - home
      Submodule:
        required: true
        type: string
        default: "all-submodule"
      Parallel-Number:
        default: 4
        required: true

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      foldersubmodule: ${{steps.set-variables.outputs.foldersubmodule}}
    name: Set Variables
    steps:
    - id: set-variables
      run: |
        echo "::set-output name=foldersubmodule::"


  get-feature-submodule:
    runs-on: ubuntu-latest
    outputs:
      matrixs: ${{ steps.set-matrix-submodule.outputs.matrix }}
      foldersubmodule: ${{steps.set-variables.outputs.foldersubmodule}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./module/${{github.event.inputs.Module}}/${{github.event.inputs.Submodule}}/${{github.event.inputs.Submodule}}.txt
      - name: Echo package.json
        run: echo "${{ steps.package.outputs.content }}"
      - name: Get Matrix Feature Submodule 
        id: set-matrix-submodule
        run: |
          #!/bin/bash
          pwd
          ls
          JOB_STRATEGY_MATRIX_SUBMODUL=$(node -e "let r=[];var f='${{ steps.package.outputs.content }}'.split(',');var chunkSize = Math.ceil(f.length/${{github.event.inputs.Parallel-Number}}); for(let i = 0; i < f.length; i += chunkSize) { const chunk = f.slice(i, i + chunkSize); r.push(chunk.join(','))}; console.log(JSON.stringify(r))";)
          echo $JOB_STRATEGY_MATRIX_SUBMODULE
          echo "::set-output name=job-strategy-matrix-submodule::$JOB_STRATEGY_MATRIX_SUBMODULE"

  get-feature-module:
    if: ${{github.event.inputs.Module == 'all-module' && github.event.inputs.Submodule == 'all-submodule'}}
    runs-on: ubuntu-latest
    outputs:
      matrixs: ${{ steps.set-matrix-submodule.outputs.matrix }}
      foldersubmodule: ${{steps.set-variables.outputs.foldersubmodule}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./module/${{github.event.inputs.Module}}/${{github.event.inputs.Submodule}}/${{github.event.inputs.Submodule}}.txt
      - name: Echo package.json
        run: echo "${{ steps.package.outputs.content }}"
      - name: Get Matrix Feature Submodule 
        id: set-matrix-submodule
        run: |
          #!/bin/bash
          pwd
          ls
          JOB_STRATEGY_MATRIX_MODULE=$(node -e "let r=[];var f='${{ steps.package.outputs.content }}'.split(',');var chunkSize = Math.ceil(f.length/${{github.event.inputs.Parallel-Number}}); for(let i = 0; i < f.length; i += chunkSize) { const chunk = f.slice(i, i + chunkSize); r.push(chunk.join(','))}; console.log(JSON.stringify(r))";)
          echo $JOB_STRATEGY_MATRIX_MODULE
          echo "::set-output name=job-strategy-matrix-module::$JOB_STRATEGY_MATRIX_MODULE"


  run-testing:
    needs: [get-feature-module, get-feature-submodule]
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        feature-module: ${{fromJson(needs.get-feature-module.outputs.job-strategy-matrix-module)}}
        feature-submodule: ${{fromJson(needs.get-feature-submodule.outputs.job-strategy-matrix-submodule)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: run test
        run: |
          if [ ${{github.event.inputs.Module == 'all-module' && github.event.inputs.Submodule == 'all-submodule' && github.event.inputs.Features == 'critical'}} ]; then
            chmod +x gradlew
            echo ${{matrix.feature-module}}
          elif [ ${{github.event.inputs.Module != 'all-module' && github.event.inputs.Submodule == 'all-submodule'}} ]; then
            chmod +x gradlew
            echo ${{matrix.feature-submodule}}
          elif [ ${{github.event.inputs.Module != 'all-module'  && github.event.inputs.Submodule != 'all-submodule'}} ]; then
            chmod +x gradlew
            echo ${{matrix.feature-module}}
          else
            chmod +x gradlew
            echo ${{matrix.feature-submodule}}
          fi